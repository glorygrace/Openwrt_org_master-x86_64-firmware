
name: download-net-file

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  File_URL: https://productionresultssa6.blob.core.windows.net/actions-results/603ce1a5-2d6f-456b-9a65-9fad6b67b214/workflow-job-run-ca395085-040a-526b-2ce8-bdc85f692774/artifacts/46bdaf3ac8f87ae920edc501943b44cccf05b3d9930b9b2102a2e6c7f3d5ad83.zip?rscd=attachment%3B+filename%3D%22istoreos-firmware-x86_64-2024.04.10.zip%22&se=2024-04-11T01%3A29%3A15Z&sig=4qgMQj1Xy6USxxEosxC54%2BKzrqdbJq4y0fJ1VvtyrAU%3D&sp=r&spr=https&sr=b&st=2024-04-11T01%3A19%3A10Z&sv=2021-12-02
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_GOFILE: false
  UPLOAD_WENSHUSHU: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        #sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
       
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        mkdir openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Download files
      id: download
      run: |
        cd openwrt
        # curl -fsSL https://archive.org/download/firmware-16.1.0_202309/Firmware%2016.1.0.zip
        curl -OfsSL $File_URL
        # echo "::set-output name=status::success"
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Organize files
      id: organize
      if: steps.download.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt
        t=file_$(date +%Y%m%d%H%M%S).tar.gz
        echo "FILE_NAME=$t" >> $GITHUB_ENV
        tar -zcvf $t *
        # echo "::set-output name=status::success"
        echo "status=success" >> $GITHUB_OUTPUT
               
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        # cd /workdir
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.FILE_NAME }} | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"      
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to GoFile
      id: Gofile
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_GOFILE == 'true' && !cancelled()
      run: |
        # cd /workdir
        curl -fsSL git.io/file-transfer | sh
        ./transfer gof -s -p 16 --no-progress ${{ env.FILE_NAME }} | tee gofile.log
        echo "::warning file=gofile.io::$(cat gofile.log | grep https)"      
        echo "url=$(cat gofile.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to WenShuShu
      id: WenShuShu
      # if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      # working-directory: /workdir
      run: |
        cd openwrt
        curl -fsSL git.io/file-transfer | sh
        ./transfer wss -s -p 16 --no-progress ${{ env.FILE_NAME }} | tee wenshushu.log
        echo "::warning file=wenshushu.cn::$(cat wenshushu.log | grep https)" 
        EOF=$(cat wenshushu.log | grep https | cut -f3 -d' ')
        echo "text<<$EOF" >> $GITHUB_OUTPUT
        echo "$message" >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT
        
    
