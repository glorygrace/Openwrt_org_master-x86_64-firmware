
name: download-net-file

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_GOFILE: false
  UPLOAD_WENSHUSHU: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        #sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
       
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Download files
      id: download
      working-directory: /workdir
      run: |
        cd /workdir
        # curl -fsSL https://archive.org/download/firmware-16.1.0_202309/Firmware%2016.1.0.zip
        curl -fsSL https://raw.githubusercontent.com/P3TERX/openwrt-list/master/depends-ubuntu-2004
        # echo "::set-output name=status::success"
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Organize files
      id: organize
      if: steps.download.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        # cd /workdir
        t=file_$(date +%Y%m%d%H%M%S).tar.gz
        echo "FILE_NAME=$t" >> $GITHUB_ENV
        tar -zcvf $t *
        # echo "::set-output name=status::success"
        echo "status=success" >> $GITHUB_OUTPUT
               
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        # cd /workdir
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.FILE_NAME }} | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"      
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to GoFile
      id: Gofile
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_GOFILE == 'true' && !cancelled()
      run: |
        # cd /workdir
        curl -fsSL git.io/file-transfer | sh
        ./transfer gof -s -p 16 --no-progress ${{ env.FILE_NAME }} | tee gofile.log
        echo "::warning file=gofile.io::$(cat gofile.log | grep https)"      
        echo "url=$(cat gofile.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to WenShuShu
      id: WenShuShu
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        # cd /workdir
        curl -fsSL git.io/file-transfer | sh
        ./transfer wss -s -p 16 --no-progress ${{ env.FILE_NAME }} | tee wenshushu.log
        echo "::warning file=wenshushu.cn::$(cat wenshushu.log | grep https)" 
        message=$(cat wenshushu.log | grep https | cut -f3 -d' ')
        echo "$message" >> $GITHUB_OUTPUT
        
    
